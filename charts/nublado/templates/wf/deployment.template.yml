apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "nublado.fullname" . }}-wf-api
  labels:
    name: {{ template "nublado.fullname" . }}-wf-api
spec:
  replicas: 1
  selector:
    matchLabels:
      name: {{ template "nublado.fullname" . }}-wf-api
  template:
    metadata:
      labels:
        name: {{ template "nublado.fullname" . }}-wf-api
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ template "nublado.fullname" . }}-hub
      securityContext:
        runAsUser: {{ .Values.hub.uid }}
        runAsGroup: {{ .Values.hub.gid }}
        fsGroup: {{ .Values.hub.gid }}
      containers:
        - name: {{ template "nublado.fullname" . }}-wf-api
          imagePullPolicy: "Always"
          image: {{ .Values.wf.image }}
          resources:
            limits:
              memory: 1G
              cpu: 1.0
            requests:
              memory: 512M
              cpu: 0.4
          ports:
            - containerPort: 8080
              name: api
          env:
            # In general this should look like the Hub
            - name: FQDN
              value: '{{.Values.fqdn}}'
            - name: INSTANCE_NAME
              value: '{{ template "nublado.fullname" . }}'
            - name: DEBUG
              value: '{{.Values.debug}}'
            - name: LOGLEVEL
              value: '{{.Values.hub.loglevel}}'
            - name: LAB_NO_SUDO
              value: '{{.Values.lab.no_sudo}}'
            - name: ELIOT_ROOT_LOGGING
              value: '{{.Values.hub.eliot_root_logging}}'
            # IP address to bind to
            - name: WF_API_ADDR
              value: '{{.Values.wf.api_addr}}'
            # Settings from Hub
            - name: ALLOW_DASK_SPAWN
              value: '{{.Values.dask.allow_spawn}}'
            - name: LAB_NODEJS_MAX_MEM
              value: '{{.Values.lab.resources.nodejs_max_mem}}'
            - name: TINY_CPU_MAX
              value: '{{.Values.lab.resources.tiny_cpu_max}}'
            - name: MB_PER_CPU
              value: '{{.Values.lab.resources.mb_per_cpu}}'
            - name: LAB_SIZE_RANGE
              value: '{{.Values.lab.resources.size_range}}'
            - name: SIZE_INDEX
              value: '{{.Values.lab.resources.size_index}}'
            - name: OPTIONS_FORM_SIZELIST
              value: '{{.Values.lab.resources.options_form_sizes}}'
            - name: HUB_ROUTE
              value: '{{.Values.routes.hub}}'
            - name: FIREFLY_ROUTE
              value: '{{.Values.routes.firefly}}'
            - name: JS9_ROUTE
              value: '{{.Values.routes.js9}}'
            - name: API_ROUTE
              value: '{{.Values.routes.api}}'
            - name: TAP_ROUTE
              value: '{{.Values.routes.tap}}'
            - name: SODA_ROUTE
              value: '{{.Values.routes.soda}}'
            - name: EXTERNAL_FIREFLY_URL
              value: '{{.Values.routes.external.firefly}}'
            - name: EXTERNAL_JS9_URL
              value: '{{.Values.routes.external.js9}}'
            - name: EXTERNAL_INSTANCE_URL
              value: '{{.Values.routes.external.instance}}'
            - name: EXTERNAL_API_URL
              value: '{{.Values.routes.external.api}}'
            - name: EXTERNAL_SODA_URL
              value: '{{.Values.routes.external.soda}}'
            - name: EXTERNAL_HUB_URL
              value: '{{.Values.routes.external.hub}}'
            # Set to customize what repo and what images to scan.
            - name: LAB_REPO_HOST
              value: '{{.Values.lab.image.repo_host}}'
            - name: LAB_REPO_OWNER
              value: '{{.Values.lab.image.repo_owner}}'
            - name: LAB_REPO_NAME
              value: '{{.Values.lab.image.repo_name}}'
            {{ if .Values.lab.image.repo_username }}
            - name: LAB_REPO_USERNAME
              value: "{{.Values.lab.image.repo_username}}"
            - name: LAB_REPO_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: lab_repo_password
                  name: {{ template "nublado.fullname" . }}-hub
            {{ end }}
          # If you use sqlite, you want this to persist sessions across
          #  jupyterhub restarts.
          volumeMounts:
            - name: metadata
              mountPath: /etc/metadata
              readOnly: false
            - name: fs-mounts
              mountPath: /opt/lsst/software/jupyterhub/mounts
            - name: resourcemap
              mountPath: /opt/lsst/software/jupyterhub/resources
            - name: base-passwd
              mountPath: /opt/lsst/software/jupyterhub/base-files/passwd
              subPath: passwd
            - name: base-group
              mountPath: /opt/lsst/software/jupyterhub/base-files/group
              subPath: group
      volumes:
        - name: metadata
          downwardAPI:
            items:
              - path: "annotations"
                fieldRef:
                  fieldPath: metadata.annotations
              - path: "labels"
                fieldRef:
                  fieldPath: metadata.labels
        - name: fs-mounts
          configMap:
            defaultMode: 0444
            items:
            - key: mountpoints.json
              path: mountpoints.json
            name: {{ template "nublado.fullname" . }}-fs-mounts
        - name: resourcemap
          configMap:
            defaultMode: 0444
            items:
            - key: resourcemap.json
              path: resourcemap.json
            name: {{ template "nublado.fullname" . }}-resourcemap
        - name: base-passwd
          configMap:
            defaultMode: 0444
            items:
            - key: passwd
              path: passwd
            name: {{ template "nublado.fullname" . }}-base-passwd
        - name: base-group
          configMap:
            defaultMode: 0444
            items:
            - key: group
              path: group
            name: {{ template "nublado.fullname" . }}-base-group
