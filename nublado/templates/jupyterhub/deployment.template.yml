apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "nublado.fullname" . }}-hub
  labels:
    name: {{ template "nublado.fullname" . }}-hub
spec:
  replicas: 1
  selector:
    matchLabels:
      name: {{ template "nublado.fullname" . }}-hub
  template:
    metadata:
      labels:
        name: {{ template "nublado.fullname" . }}-hub
    spec:
      serviceAccountName: {{ template "nublado.fullname" . }}-hub
      securityContext:
        runAsUser: {{ .Values.hub.uid }}
        runAsGroup: {{ .Values.hub.gid }}
        fsGroup: {{ .Values.hub.gid }}
      containers:
        - name: {{ template "nublado.fullname" . }}-hub
          imagePullPolicy: "Always"
          image: {{ .Values.hub.image }}
          resources:
            limits:
              memory: 2G
              cpu: 2.0
            requests:
              memory: 1G
              cpu: 0.8
          ports:
            - containerPort: 8081
              name: api
          env:
            - name: LOGLEVEL
              value: INFO
            - name: FQDN
              value: '{{.Values.fqdn}}'
            - name: HELM_TAG
              value: '{{ template "nublado.fullname" . }}'
            # Set to non-empty value to enable debugging.
            - name: DEBUG
              value: '{{.Values.debug}}'
            # One of "github", "cilogon", or "jwt"
            - name: OAUTH_PROVIDER
              value: '{{.Values.oauth_provider}}'
            # If set, enables running lab containers with k8s privileges
            #  to start/stop/list containers (to spawn dask worker pods)
            - name: ALLOW_DASK_SPAWN
              value: '{{.Values.dask.allow_spawn}}'
            # If set, restricts lab or dask to run on containers with
            #  labels 'jupyterlab: ok' or 'dask: ok'
            - name: RESTRICT_LAB_NODES
              value: '{{.Values.lab.restrict_nodes}}'
            - name: RESTRICT_DASK_NODES
              value: '{{.Values.dask.restrict_nodes}}'
            # Maximum number of dask worker pods
            - name: MAX_DASK_WORKERS
              value: '{{.Values.dask.max_workers}}'
            # Set to customize what repo and what images to scan.
            - name: LAB_REPO_HOST
              value: '{{.Values.lab.image.repo_host}}'
            - name: LAB_REPO_OWNER
              value: '{{.Values.lab.image.repo_owner}}'
            - name: LAB_REPO_NAME
              value: '{{.Values.lab.image.repo_name}}'
            # Set if you want to change number of experimentals/dailies/
            #  weeklies/releases prepulled and displayed in menu
            #  (usually 0/3/2/1)
            - name: PREPULLER_EXPERIMENTALS
              value: '{{.Values.lab.image.experimentals}}'
            - name: PREPULLER_DAILIES
              value: '{{.Values.lab.image.dailies}}'
            - name: PREPULLER_WEEKLIES
              value: '{{.Values.lab.image.weeklies}}'
            - name: PREPULLER_RELEASES
              value: '{{.Values.lab.image.releases}}'
            - name: PREPULLER_CACHEFILE
              value: '{{.Values.lab.image.cachefile}}'
            # Set if you do not want to scan a repository for images.
            - name: LAB_IMAGE
              value: '{{.Values.lab.image_name}}'
            # Set if you want something other than 12 hours.  Setting to
            # zero or a negative value disables.
            - name: LAB_CULL_TIMEOUT
              value: '{{.Values.lab.cull_timeout}}'
            - name: LAB_CULL_POLICY
              value: '{{.Values.lab.cull_policy}}'
            - name: LAB_NODEJS_MAX_MEM
              value: '{{.Values.lab.resources.nodejs_max_mem}}'
            - name: TINY_CPU_MAX
              value: '{{.Values.lab.resources.tiny_cpu_max}}'
            - name: MB_PER_CPU
              value: '{{.Values.lab.resources.mb_per_cpu}}'
            - name: LAB_SIZE_RANGE
              value: '{{.Values.lab.resources.size_range}}'
            - name: OPTIONS_FORM_SIZELIST
              value: '{{.Values.lab.resources.options_form_sizes}}'
            - name: JUPYTERLAB_CONFIG_DIR
              value: '/opt/lsst/software/jupyterhub/config'
            - name: HUB_ROUTE
              value: '{{.Values.routes.hub}}'
            - name: FIREFLY_ROUTE
              value: '{{.Values.routes.firefly}}'
            - name: JS9_ROUTE
              value: '{{.Values.routes.js9}}'
            - name: API_ROUTE
              value: '{{.Values.routes.api}}'
            - name: TAP_ROUTE
              value: '{{.Values.routes.tap}}'
            - name: SODA_ROUTE
              value: '{{.Values.routes.soda}}'
            - name: AUTO_REPO_URLS
              value: '{{.Values.lab.repos}}'
            - name: SIZE_INDEX
              value: '{{.Values.lab.resources.size_index}}'
            - name: EXTERNAL_FILESERVER_IP
            {{ if .Values.routes.external.fileserver }}
              value: '{{.Values.routes.external.fileserver }}'
            {{ else }}
              value: '{{ template "nublado.fullname" . }}-fileserver.{{.Release.Namespace}}.svc.cluster.local'
            {{ end }}
            - name: EXTERNAL_FIREFLY_URL
              value: '{{.Values.routes.external.firefly}}'
            - name: EXTERNAL_JS9_URL
              value: '{{.Values.routes.external.js9}}'
            - name: EXTERNAL_INSTANCE_URL
              value: '{{.Values.routes.external.instance}}'
            - name: EXTERNAL_API_URL
              value: '{{.Values.routes.external.api}}'
            - name: EXTERNAL_SODA_URL
              value: '{{.Values.routes.external.soda}}'
            - name: EXTERNAL_HUB_URL
              value: '{{.Values.routes.external.hub}}'
            - name: PROXY_SERVICE_HOST
              value: '{{ template "nublado.fullname" . }}-proxy.{{.Release.Namespace}}'
            - name: PROXY_SERVICE_PORT_API
              value: '8001'
            - name: HUB_SERVICE_HOST
              value: '{{ template "nublado.fullname" . }}-hub.{{.Release.Namespace}}'
            - name: HUB_SERVICE_PORT_API
              value: '8081'
            - name: GITHUB_ORGANIZATION_WHITELIST
              valueFrom:
                secretKeyRef:
                  name: {{ template "nublado.fullname" . }}-hub
                  key: github_organization_whitelist
            - name: CILOGON_GROUP_WHITELIST
              valueFrom:
                secretKeyRef:
                  name: {{ template "nublado.fullname" . }}-hub
                  key: cilogon_group_whitelist
            - name: GITHUB_ORGANIZATION_DENYLIST
              valueFrom:
                secretKeyRef:
                  name: {{ template "nublado.fullname" . }}-hub
                  key: github_organization_denylist
                  optional: true
            - name: CILOGON_GROUP_DENYLIST
              valueFrom:
                secretKeyRef:
                  name: {{ template "nublado.fullname" . }}-hub
                  key: cilogon_group_denylist
                  optional: true
            - name: OAUTH_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ template "nublado.fullname" . }}-hub
                  key: oauth_client_id
            - name: OAUTH_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "nublado.fullname" . }}-hub
                  key: oauth_secret
            - name: OAUTH_CALLBACK_URL
              valueFrom:
                secretKeyRef:
                  name: {{ template "nublado.fullname" . }}-hub
                  key: oauth_callback_url
            # You want this if you're using CILogon rather than GitHub
            #  and not using 'cilogon.org'
            # - name: CILOGON_HOST
            #   value: 'test.cilogon.org'
            # Use this to restrict the list of available ID Providers
            #- name: CILOGON_IDP_SELECTION
            #  value: 'https://idp.ncsa.illinois.edu/idp/shibboleth'
            # Use this to set the CILogon skin
            #- name: CILOGON_SKIN
            #  value: 'LSST'
            # This may contain credentials, so it should be a secret
            - name: SESSION_DB_URL
              valueFrom:
                secretKeyRef:
                  name: {{ template "nublado.fullname" . }}-hub
                  key: session_db_url
            # This is one or more 32-byte encryption keys (separated
            # with ';') needed to persist auth_state.  They can be
            # base64 or hex-encoded.  Two lets you do key rotation
            - name: JUPYTERHUB_CRYPT_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "nublado.fullname" . }}-hub
                  key: jupyterhub_crypto_key
            - name: CONFIGPROXY_AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ template "nublado.fullname" . }}-hub
                  key: configproxy_auth_token
          # If you use sqlite, you want this to persist sessions across
          #  jupyterhub restarts.
          volumeMounts:
            - name: metadata
              mountPath: /etc/metadata
              readOnly: false
{{ if .Values.hub.persistent_home }}
            - name: home-jovyan
              mountPath: /home/jovyan
{{ end }}
            - name: fs-mounts
              mountPath: /opt/lsst/software/jupyterhub/mounts
            - name: resourcemap
              mountPath: /opt/lsst/software/jupyterhub/resources
            - name: jupyterhub-config
              mountPath: /opt/lsst/software/jupyterhub/config
            - name: jwt-cert
              mountPath: /opt/jwt
              readOnly: true
      volumes:
        - name: metadata
          downwardAPI:
            items:
              - path: "annotations"
                fieldRef:
                  fieldPath: metadata.annotations
              - path: "labels"
                fieldRef:
                  fieldPath: metadata.labels
{{ if .Values.hub.persistent_home }}
        - name: home-jovyan
          persistentVolumeClaim:
           claimName: {{ template "nublado.fullname" . }}-hub-physpvc
{{ end }}
        - name: jwt-cert
          configMap:
            defaultMode: 420
            items:
            - key: signing-certificate.pem
              path: signing-certificate.pem
            name: {{ template "nublado.fullname" . }}-jwt-cert
        - name: fs-mounts
          configMap:
            defaultMode: 420
            items:
            - key: mountpoints.json
              path: mountpoints.json
            name: {{ template "nublado.fullname" . }}-fs-mounts
        - name: resourcemap
          configMap:
            defaultMode: 420
            items:
            - key: resourcemap.json
              path: resourcemap.json
            name: {{ template "nublado.fullname" . }}-resourcemap
        - name: jupyterhub-config
          configMap:
            defaultMode: 420
            items:
            - key: jupyterhub_config.py
              path: jupyterhub_config.py
            name: {{ template "nublado.fullname" . }}-jupyterhub-config
